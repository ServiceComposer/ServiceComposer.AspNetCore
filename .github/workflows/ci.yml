name: CI
on:
  push:
    tags:
      - '[0-9].[0-9]+.[0-9]'
      - '[0-9].[0-9]+.[0-9]+-*'
    branches:
      - master
      - release-*
  pull_request:
  workflow_dispatch:
env:
  DOTNET_NOLOGO: true
jobs:
  build:
    name: Build and test on ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            name: Windows
          - os: ubuntu-latest
            name: Linux
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: |
            8.0.x
            9.0.x
      - name: Build
        run: dotnet build src --configuration Release
      - name: Tests
        run: dotnet test src --configuration Release --no-build
      - name: Upload packages
        if: matrix.name == 'Linux'
        uses: actions/upload-artifact@v4.6.2
        with:
          name: nuget-packages
          path: nugets/
          retention-days: 2
  release-to-feedz:
    needs: build
    name: Release to Feedz.io
    if: startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: 8.0.x
      - name: Download artifacts
        uses: actions/download-artifact@v4.2.1
        with:
          name: nuget-packages
          path: nugets/
      - name: Push package to Feedz.io
        run: dotnet nuget push ./nugets/*.nupkg --source https://f.feedz.io/servicecomposer/pre-releases/nuget --api-key ${{ secrets.FEEDZ_API_KEY }}
      - name: Push symbols to Feedz.io
        run: dotnet nuget push ./nugets/*.snupkg --source https://f.feedz.io/servicecomposer/pre-releases/symbols --api-key ${{ secrets.FEEDZ_API_KEY }}
  release-to-nuget:
    needs: build
    name: Release to Nuget.org
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    steps:
      - name: Setup .NET
        uses: actions/setup-dotnet@v4.3.1
        with:
          dotnet-version: 8.0.x
      - name: Download artifacts
        uses: actions/download-artifact@v4.2.1
        with:
          name: nuget-packages
          path: nugets/
      - name: Push package to NuGet.org
        run: dotnet nuget push ./nugets/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }}
      - name: Push symbols to NuGet.org
        run: dotnet nuget push ./nugets/*.snupkg --api-key ${{ secrets.NUGET_API_KEY }}
