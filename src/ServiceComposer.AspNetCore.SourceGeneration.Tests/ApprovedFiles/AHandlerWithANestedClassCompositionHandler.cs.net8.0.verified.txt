// <auto-generated/>
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using ServiceComposer.AspNetCore;
using ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers;
using System;
using System.ComponentModel;
using System.Threading.Tasks;

#pragma warning disable SC0001
namespace ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers.Generated
{
    [EditorBrowsable(EditorBrowsableState.Never)]
    class AHandlerWithANestedClassCompositionHandler_Post_int_id_int_renamed_ServiceComposer_AspNetCore_SourceGeneration_Tests_TestFiles_CompositionHandlers_AHandlerWithANestedClassCompositionHandler_BodyClass_body(ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers.AHandlerWithANestedClassCompositionHandler userHandler)
         : ICompositionRequestsHandler
    {
        [HttpPostAttribute("/sample/{id}")]
        [AuthorizeAttribute]
        [BindFromRoute<Int32>("id")]
        [BindFromQuery<Int32>("x")]
        [BindFromBody<AHandlerWithANestedClassCompositionHandler.BodyClass>()]
        public Task Handle(HttpRequest request)
        {
            var ctx = HttpRequestExtensions.GetCompositionContext(request);
            var arguments = ctx.GetArguments(this);
            var p0_id = ModelBindingArgumentExtensions.Argument<Int32>(arguments, "id", BindingSource.Path);
            var p1_x = ModelBindingArgumentExtensions.Argument<Int32>(arguments, "x", BindingSource.Query);
            var p2_body = ModelBindingArgumentExtensions.Argument<AHandlerWithANestedClassCompositionHandler.BodyClass>(arguments, "body", BindingSource.Body);

            return userHandler.Post(p0_id, p1_x, p2_body);
        }
    }
}
#pragma warning restore SC0001
