// <auto-generated/>
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.ModelBinding;
using ServiceComposer.AspNetCore;
using ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers;
using System;
using System.ComponentModel;
using System.Threading.Tasks;

#pragma warning disable SC0001
namespace ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers.Generated
{
    [EditorBrowsable(EditorBrowsableState.Never)]
    class WithQueryBindingWithoutAttributeCompositionHandler_Post_int_id_int_c_string_v_ServiceComposer_AspNetCore_SourceGeneration_Tests_TestFiles_CompositionHandlers_WithQueryBindingWithoutAttributeBodyClass_body(ServiceComposer.AspNetCore.SourceGeneration.Tests.TestFiles.CompositionHandlers.WithQueryBindingWithoutAttributeCompositionHandler userHandler)
         : ICompositionRequestsHandler
    {
        [ResponseCacheAttribute(Duration = 10, Location = ResponseCacheLocation.Client)]
        [HttpPostAttribute("/sample/{v}")]
        [BindFromRoute<Int32>("v")]
        [BindFromQuery<Int32>("c")]
        [BindFromQuery<String>("v")]
        [BindFromBody<WithQueryBindingWithoutAttributeBodyClass>()]
        public Task Handle(HttpRequest request)
        {
            var ctx = HttpRequestExtensions.GetCompositionContext(request);
            var arguments = ctx.GetArguments(this);
            var p0_v = ModelBindingArgumentExtensions.Argument<Int32>(arguments, "v", BindingSource.Path);
            var p1_c = ModelBindingArgumentExtensions.Argument<Int32>(arguments, "c", BindingSource.Query);
            var p2_v = ModelBindingArgumentExtensions.Argument<String>(arguments, "v", BindingSource.Query);
            var p3_body = ModelBindingArgumentExtensions.Argument<WithQueryBindingWithoutAttributeBodyClass>(arguments, "body", BindingSource.Body);

            return userHandler.Post(p0_v, p1_c, p2_v, p3_body);
        }
    }
}
#pragma warning restore SC0001
